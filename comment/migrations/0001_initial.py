# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-15 11:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
        ('team', '0001_initial'),
        ('activity', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='评论时间')),
                ('content', models.TextField(db_index=True, max_length=100, verbose_name='评论内容')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', related_query_name='comment', to='activity.Activity', verbose_name='被评论动态')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_about_activity', related_query_name='comment_about_activity', to='user.User', verbose_name='评论者')),
            ],
            options={
                'db_table': 'activity_comment',
            },
        ),
        migrations.CreateModel(
            name='ActivityCommentOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_comment', models.BooleanField(db_index=True, default=True)),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='comment_option', to='activity.Activity')),
            ],
            options={
                'db_table': 'activity_comment_option',
            },
        ),
        migrations.CreateModel(
            name='ProjectComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='评论时间')),
                ('content', models.TextField(db_index=True, max_length=100, verbose_name='评论内容')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_about_project', related_query_name='comment_about_project', to='user.User', verbose_name='评论者')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', related_query_name='comment', to='project.Project', verbose_name='被评论项目')),
            ],
            options={
                'db_table': 'project_comment',
            },
        ),
        migrations.CreateModel(
            name='ProjectCommentOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_comment', models.BooleanField(db_index=True, default=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='comment_option', to='project.Project')),
            ],
            options={
                'db_table': 'project_comment_option',
            },
        ),
        migrations.CreateModel(
            name='TeamComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='评论时间')),
                ('content', models.TextField(db_index=True, max_length=100, verbose_name='评论内容')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_about_team', related_query_name='comment_about_team', to='user.User', verbose_name='评论者')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', related_query_name='comment', to='team.Team', verbose_name='被评论团队')),
            ],
            options={
                'db_table': 'team_comment',
            },
        ),
        migrations.CreateModel(
            name='TeamCommentOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_comment', models.BooleanField(db_index=True, default=True)),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='comment_option', to='team.Team')),
            ],
            options={
                'db_table': 'team_comment_option',
            },
        ),
        migrations.CreateModel(
            name='UserComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='评论时间')),
                ('content', models.TextField(db_index=True, max_length=100, verbose_name='评论内容')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_about_user', related_query_name='comment_about_user', to='user.User', verbose_name='评论者')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', related_query_name='comment', to='user.User', verbose_name='被评论用户')),
            ],
            options={
                'db_table': 'user_comment',
            },
        ),
        migrations.CreateModel(
            name='UserCommentOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_comment', models.BooleanField(db_index=True, default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='comment_option', to='user.User')),
            ],
            options={
                'db_table': 'user_comment_option',
            },
        ),
    ]
